name: Rust

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: test-cargo-registry
      - name: List
        run: find ./
      - name: Run tests
        run: cargo test --verbose

  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - TARGET: x86_64-unknown-linux-gnu
            OS: ubuntu-latest
          - TARGET: x86_64-unknown-linux-musl
            OS: ubuntu-latest
          - TARGET: aarch64-apple-darwin
            OS: macos-latest
          - TARGET: x86_64-apple-darwin
            OS: macos-latest
          - TARGET: x86_64-pc-windows-gnu
            OS: windows-latest
    needs: test
    runs-on: ${{ matrix.OS }}
    env:
      NAME: lsctl
      TARGET: ${{ matrix.TARGET }}
    steps:
      - uses: actions/checkout@v2
      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ./target
          key: build-cargo-registry-${{matrix.TARGET}}
      - name: Install clippy
        run: cargo install cross
      - name: Run build
        run: cross build --release --verbose --target $TARGET
      - name: Compress
        run: |
          mkdir -p ./artifacts
          # windows is the only OS using a different convention for executable file name
          if [[ $OS =~ ^windows.*$ ]]; then
              EXEC=$NAME.exe
          else
              EXEC=$NAME
          fi
          if [[ $GITHUB_REF_TYPE =~ ^tag$ ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$GITHUB_SHA
          fi
          mv ./target/$TARGET/release/$EXEC ./$EXEC
          tar -czf ./artifacts/$NAME-$TARGET-$TAG.tar.gz $EXEC
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: |
            ./artifacts

  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: result
          path: ./artifact
      - name: List release files
        run: find ./artifacts/
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref }}
          tag_name: ${{ github.ref }}
          draft: true
          files: ./artifacts/*.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}
