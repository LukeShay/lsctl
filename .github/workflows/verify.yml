name: verify

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
      - uses: actions/checkout@v2
      - uses: actions-rs/cargo@v1
      - uses: Swatinem/rust-cache@v1
      - run: cargo install cargo-make
      - run: cargo make test-ci --verbose

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
      - uses: actions/checkout@v2
      - uses: actions-rs/cargo@v1
      - uses: Swatinem/rust-cache@v1
      - run: cargo fmt --check --verbose

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
      - uses: actions/checkout@v2
      - uses: actions-rs/cargo@v1
      - uses: Swatinem/rust-cache@v1
      - run: cargo clippy --all-targets --all-features --verbose

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
          - os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
          - os: windows-latest
            rust: stable
            target: x86_64-pc-windows-msvc
    steps:
      - uses: styfle/cancel-workflow-action@0.9.1
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - if: matrix.rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
      - if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -y
          sudo apt-get install musl-tools -y
      - if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          rustup target add ${{ matrix.target }}
          cargo build --release --target ${{ matrix.target }}
      - if: matrix.os == 'windows-latest'
        run: cargo build --release
        env:
          RUSTFLAGS: -Ctarget-feature=+crt-static
      - if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
        run: |
          mkdir -p ./artifacts

          zip -jr9 ./artifacts/lsctl-${{ matrix.target }}.zip ./target/${{ matrix.target }}/release/lsctl
      - if: matrix.os == 'windows-latest'
        run: |
          New-Item -Path artifacts -ItemType directory

          Compress-Archive -CompressionLevel Optimal -Force -Path target/release/lsctl.exe -DestinationPath artifacts/lsctl-${{ matrix.target }}.zip
      - shell: bash
        run: find ./artifacts/
      - uses: actions/upload-artifact@v2
        with:
          name: result
          path: |
            ./artifacts
  tag:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [test, build]
    steps:
      - uses: actions/checkout@v2
      - uses: Klemensas/action-autotag@stable
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          package_root: "./npm"
          tag_prefix: "v"
